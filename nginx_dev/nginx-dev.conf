server {
    listen 80;
    server_name localhost;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # 开发环境静态资源及 Webpack DevServer 代理
    location / {
        proxy_pass http://host.docker.internal:3000; # 转发到 Webpack DevServer
    }

    # API 开发环境代理
    location /api/ {
        proxy_pass http://host.docker.internal:8080; # 保持 API 代理不变
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # SSE 代理
    location /api/ai/ {
        proxy_pass http://host.docker.internal:8080; # 代理到本地 Java 项目
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_buffering off;                     # 禁用缓冲，关键设置
        proxy_cache off;                         # 禁用缓存
        proxy_store off;                         # 禁用存储
        proxy_http_version 1.1;                 # 使用 HTTP/1.1 支持流式传输
        proxy_set_header Connection "";         # 避免连接被关闭
        tcp_nodelay on;                         # 启用 TCP_NODELAY，避免延迟
    }

    # Minio 代理
    location /minio/ {
        proxy_pass http://host.docker.internal:9000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # WebSocket 代理配置
    location /api/ws/canvas {
        proxy_pass http://host.docker.internal:8080/api/ws/canvas; # 开发环境代理到本地 8080 端口
        proxy_http_version 1.1;                # 使用 HTTP/1.1 支持 WebSocket
        proxy_set_header Upgrade $http_upgrade; # 设置 Upgrade 头，支持 WebSocket 协议
        proxy_set_header Connection "Upgrade";  # 设置 Connection 头，支持 WebSocket 协议
        proxy_set_header Host $host;           # 传递 Host 头
        proxy_set_header X-Real-IP $remote_addr; # 传递客户端真实 IP
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # 传递代理链信息
        proxy_read_timeout 86400;              # 增加超时时间，WebSocket 连接通常是长连接
    }
    
}